{"ast":null,"code":"var _jsxFileName = \"C:\\\\ApnaCollege\\\\React_Basic_Projects\\\\client\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    header: [1, 2, false]\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\"], [\"clean\"]]\n};\nconst formats = [\"header\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\"];\nexport default function EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [files, setFiles] = useState(null);\n  const [cover, setCover] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    const response = fetch(`http://localhost:3001/post/${id}`, {\n      method: \"POST\",\n      body: data,\n      credentials: 'include'\n    }).then(response => {\n      response.json().then(postInfo => {\n        setTitle(postInfo.title);\n        setSummary(postInfo.summary);\n        setContent(postInfo.content);\n      });\n    });\n  }, []);\n  function updatePost(ev) {\n    ev.preventDefault();\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"title\",\n        placeholder: \"title\",\n        value: title,\n        onChange: ev => setTitle(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"summary\",\n        placeholder: \"summary\",\n        value: summary,\n        onChange: ev => setSummary(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: ev => setFiles(ev.target.files)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: content,\n        onChange: newValue => setContent(newValue),\n        modules: modules,\n        formats: formats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"7S1JSmT7wbWSb0dq/vOt+Vo/eqM=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["ReactQuill","useEffect","useState","Navigate","useParams","jsxDEV","_jsxDEV","modules","toolbar","header","list","indent","formats","EditPost","_s","id","title","setTitle","summary","setSummary","content","setContent","files","setFiles","cover","setCover","redirect","setRedirect","response","fetch","method","body","data","credentials","then","json","postInfo","updatePost","ev","preventDefault","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","type","placeholder","value","onChange","target","newValue","_c","$RefreshReg$"],"sources":["C:/ApnaCollege/React_Basic_Projects/client/src/pages/EditPost.js"],"sourcesContent":["import ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\n\r\nconst modules = {\r\n  toolbar: [\r\n    [{ header: [1, 2, false] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\"],\r\n    [\"clean\"],\r\n  ],\r\n};\r\n\r\nconst formats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\nexport default function EditPost() {\r\n    const {id} = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [summary, setSummary] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [files, setFiles] = useState(null);\r\n  const [cover, setCover] = useState(null);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const response = fetch(`http://localhost:3001/post/${id}`, {\r\n        method: \"POST\",\r\n        body: data,\r\n        credentials:'include'\r\n      }).then(response =>{\r\n        response.json().then(postInfo =>{\r\n            setTitle(postInfo.title);\r\n            setSummary(postInfo.summary);\r\n            setContent(postInfo.content);\r\n        });\r\n      });\r\n  },[])\r\n  function updatePost(ev) {\r\n    ev.preventDefault();\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create Post</h1>\r\n      <form onSubmit={updatePost}>\r\n        <input\r\n          type=\"title\"\r\n          placeholder={\"title\"}\r\n          value={title}\r\n          onChange={(ev) => setTitle(ev.target.value)}\r\n        />\r\n        <input\r\n          type=\"summary\"\r\n          placeholder={\"summary\"}\r\n          value={summary}\r\n          onChange={(ev) => setSummary(ev.target.value)}\r\n        />\r\n        <input type=\"file\" onChange={(ev) => setFiles(ev.target.files)} />\r\n        <ReactQuill\r\n          value={content}\r\n          onChange={(newValue) => setContent(newValue)}\r\n          modules={modules}\r\n          formats={formats}\r\n        />\r\n        <button>Create Post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}